{"version":3,"sources":["components/HomePage.js","components/GetReady.js","components/UserInput.js","components/ShuffledSequence.js","components/Result.js","components/Game.js","components/Easy.js","components/Medium.js","components/Hard.js","components/Legendary.js","App.js","index.js"],"names":["HomePage","className","style","color","map","level","to","data-back","data-front","GetReady","startHandler","seconds","onClick","UserInput","sequence","handleInput","handleSubmit","userSequence","resetKeyboard","undo","notification","num","ShuffledSequence","useState","secondsLeft","setSecondsLeft","useEffect","console","log","countdown","setInterval","clearInterval","fontColor","Result","result","Game","initialSequence","setInitialSequence","shuffledSequence","setShuffledSequence","setUserSequence","ready","setReady","showShuffled","setShowShuffled","setResult","submitErrorNotification","setSubmitErrorNotification","filter","item","a","b","length","setTimeout","every","val","index","userSeqCopy","popped","pop","sort","shuffled","arr","t","i","m","Math","floor","random","shuffle","easySequence","Easy","mediumSequence","Medium","hardSequence","Hard","legendarySequence","Legendary","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b9d5c3d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePage = () => {\r\n  const levels = [\"easy\", \"medium\", \"hard\"];\r\n  return (\r\n    <div className=\"homepage\">\r\n      <div className=\"homepage-header\">\r\n        <h1>\r\n          <span style={{color: \"red\"}}>MEMORY</span> GAME\r\n        </h1>\r\n      </div>\r\n      <div className=\"secondary-header\">\r\n        <h2>Choose Level!</h2>\r\n      </div>\r\n      <div className=\"levels\">\r\n        {levels.map((level) => (\r\n          <Link to={`/${level}`} key={level}>\r\n            <div\r\n              className=\"btn-rotate\"\r\n              data-back=\"Start\"\r\n              data-front={`${level}`}\r\n            />\r\n          </Link>\r\n        ))}\r\n      </div>\r\n      <div className=\"legendary\">\r\n        <Link to=\"/legendary\" className=\"legendary-button\">\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          Legendary\r\n        </Link>\r\n      </div>\r\n      <div className=\"author\">\r\n        <p>Made By Nika P.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst GetReady = ({ level, startHandler, seconds }) => {\r\n  return (\r\n    <div className=\"ready-page\">\r\n      <div className=\"ready-page-header\">\r\n        <h1>{`Level: ${level}`}</h1>\r\n        <Link to=\"/\">\r\n          <p className=\"change-level\">Change Level</p>\r\n        </Link>\r\n      </div>\r\n      <div className=\"ready-page-instruction\">\r\n        <p>\r\n          You Have <span className=\"time\">{seconds} Seconds</span> To Memorize\r\n          The Sequence\r\n        </p>\r\n        <p>Are You Ready?!</p>\r\n        <div\r\n          onClick={startHandler}\r\n          className=\"btn-rotate\"\r\n          data-back=\"Start\"\r\n          data-front=\"Ready\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GetReady;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserInput = ({\r\n  sequence,\r\n  handleInput,\r\n  handleSubmit,\r\n  userSequence,\r\n  resetKeyboard,\r\n  undo,\r\n  notification,\r\n}) => {\r\n  return (\r\n    <div className=\"user-input-container\">\r\n      <div className=\"show-input\">\r\n        {notification ? (\r\n          <div className=\"notification\">Please Create Full Sequence</div>\r\n        ) : (\r\n          userSequence.map((num) => (\r\n            <div key={num} className=\"chosen-nums\">\r\n              {num}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      <div className=\"user-keyboard\">\r\n        {sequence.map((num) => (\r\n          <button\r\n            key={num}\r\n            onClick={() => handleInput(num)}\r\n            className=\"input-btn\"\r\n          >\r\n            {num}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"submit-btn-container\">\r\n        <div\r\n          className=\"btn-rotate\"\r\n          data-back=\"Go\"\r\n          data-front=\"Submit\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </div>\r\n      <div className=\"reset-and-level-btn-container\">\r\n        <div\r\n          className=\"btn-rotate btns-margin\"\r\n          data-back=\"undo\"\r\n          data-front=\"undo last <<\"\r\n          onClick={undo}\r\n        />\r\n        <div\r\n          className=\"btn-rotate btns-margin\"\r\n          data-back=\"Reset\"\r\n          data-front=\"Reset Keyboard\"\r\n          onClick={resetKeyboard}\r\n        />\r\n        <Link to=\"/\">\r\n          <div\r\n            className=\"btn-rotate btns-margin\"\r\n            data-back=\"Lets Change\"\r\n            data-front=\"Change Level\"\r\n            onClick={resetKeyboard}\r\n          />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInput;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ShuffledSequence = ({ sequence, seconds }) => {\r\n  const [secondsLeft, setSecondsLeft] = useState(seconds);\r\n\r\n  useEffect(() => {\r\n    console.log(secondsLeft);\r\n    if (!secondsLeft) return;\r\n\r\n    const countdown = setInterval(() => setSecondsLeft(secondsLeft - 1), 1000);\r\n\r\n    return () => clearInterval(countdown);\r\n  });\r\n\r\n  const fontColor = secondsLeft > 3 ? { color: \"green\" } : { color: \"red\" };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"timer\">\r\n        <span style={fontColor}>{secondsLeft}</span>s\r\n      </div>\r\n      <div className=\"shuffled-container\">\r\n        <div className=\"shuffled-nums\">\r\n          {sequence.map((num) => (\r\n            <div key={num} className=\"nums\">\r\n              {num}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShuffledSequence;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Result = ({ result }) => {\r\n  const fontColor = { color: result === \"WIN\" ? \"green\" : \"red\" };\r\n  return (\r\n    <div className=\"result-page\">\r\n      <div className=\"result-header\">\r\n        <h2>\r\n          You <span style={fontColor}>{`${result}`}</span>\r\n        </h2>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/\">\r\n          <div\r\n            className=\"btn-rotate\"\r\n            data-back=\"Go\"\r\n            data-front=\"Play Again\"\r\n          />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from \"react\";\r\n\r\nimport GetReady from \"./GetReady\";\r\nimport UserInput from \"./UserInput\";\r\nimport ShuffledSequence from \"./ShuffledSequence\";\r\nimport Result from \"./Result\";\r\n\r\nconst Game = ({ sequence, level }) => {\r\n  const [initialSequence, setInitialSequence] = useState(sequence);\r\n  const [shuffledSequence, setShuffledSequence] = useState([]);\r\n  const [userSequence, setUserSequence] = useState([]);\r\n  const [seconds, setSeconds] = useState(9);\r\n\r\n  const [ready, setReady] = useState(false);\r\n  const [showShuffled, setShowShuffled] = useState(false);\r\n  const [result, setResult] = useState(\"\");\r\n  const [submitErrorNotification, setSubmitErrorNotification] = useState(false);\r\n\r\n  const shuffle = (arr) => {\r\n    let m = arr.length,\r\n      t,\r\n      i;\r\n    while (m) {\r\n      i = Math.floor(Math.random() * m--);\r\n      t = arr[m];\r\n      arr[m] = arr[i];\r\n      arr[i] = t;\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  const compareSequences = (a, b) => {\r\n    return a.length === b.length && a.every((val, index) => val === b[index]);\r\n  };\r\n\r\n  const startHandler = () => {\r\n    const initialSeqCopy = [...initialSequence];\r\n    const shuffled = shuffle(initialSeqCopy);\r\n    setShuffledSequence(shuffled);\r\n    setReady(true);\r\n    setShowShuffled(true);\r\n    setTimeout(() => setShowShuffled(false), 9000);\r\n  };\r\n\r\n  const handleInput = (num) => {\r\n    setUserSequence([...userSequence, num]);\r\n    setInitialSequence(initialSequence.filter((item) => item !== num));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (userSequence.length !== shuffledSequence.length) {\r\n      setSubmitErrorNotification(true);\r\n      setTimeout(() => setSubmitErrorNotification(false), 2000);\r\n    } else if (compareSequences(shuffledSequence, userSequence)) {\r\n      setResult(\"WIN\");\r\n    } else {\r\n      setResult(\"LOSE\");\r\n    }\r\n  };\r\n\r\n  const resetKeyboard = () => {\r\n    setUserSequence([]);\r\n    setInitialSequence(sequence);\r\n  };\r\n\r\n  const undo = () => {\r\n    if (initialSequence.length !== sequence.length) {\r\n      const userSeqCopy = [...userSequence];\r\n      const popped = userSeqCopy.pop();\r\n      setUserSequence(userSeqCopy);\r\n      setInitialSequence([...initialSequence, popped].sort((a, b) => a - b));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {result ? (\r\n        <Result result={result} />\r\n      ) : ready ? (\r\n        <div>\r\n          {showShuffled ? (\r\n            <ShuffledSequence sequence={shuffledSequence} seconds={seconds} />\r\n          ) : (\r\n            <UserInput\r\n              sequence={initialSequence}\r\n              handleInput={handleInput}\r\n              handleSubmit={handleSubmit}\r\n              userSequence={userSequence}\r\n              resetKeyboard={resetKeyboard}\r\n              undo={undo}\r\n              notification={submitErrorNotification}\r\n            />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <GetReady level={level} startHandler={startHandler} seconds={seconds} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nconst easySequence = [1, 2, 3, 4, 5];\r\n\r\nconst Easy = () => {\r\n  return <Game sequence={easySequence} level=\"Easy\" />;\r\n};\r\n\r\nexport default Easy;\r\n","import React from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nconst mediumSequence = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\nconst Medium = () => {\r\n  return <Game sequence={mediumSequence} level=\"Medium\" />;\r\n};\r\n\r\nexport default Medium;\r\n","import React from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nconst hardSequence = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n\r\nconst Hard = () => {\r\n  return <Game sequence={hardSequence} level=\"Hard\" />;\r\n};\r\n\r\nexport default Hard;\r\n","import React from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nconst legendarySequence = [\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5,\r\n  6,\r\n  7,\r\n  8,\r\n  9,\r\n  10,\r\n  11,\r\n  12,\r\n  13,\r\n  14,\r\n  15,\r\n  16,\r\n  17,\r\n  18,\r\n  19,\r\n  20,\r\n];\r\n\r\nconst Legendary = () => {\r\n  return <Game sequence={legendarySequence} level=\"Legendary\" />;\r\n};\r\n\r\nexport default Legendary;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n// Components\nimport HomePage from \"./components/HomePage\";\nimport Easy from \"./components/Easy\";\nimport Medium from \"./components/Medium\";\nimport Hard from \"./components/Hard\";\nimport Legendary from \"./components/Legendary\";\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <HomePage />\n          </Route>\n          <Route path=\"/easy\">\n            <Easy />\n          </Route>\n          <Route path=\"/medium\">\n            <Medium />\n          </Route>\n          <Route path=\"/hard\">\n            <Hard />\n          </Route>\n          <Route path=\"/legendary\">\n            <Legendary />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}